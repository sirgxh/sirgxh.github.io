<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Redhat 开发者账号订阅到期</title>
    <link href="/posts/24895.html"/>
    <url>/posts/24895.html</url>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>打开文章<strong><a href="https://access.redhat.com/solutions/21693">https://access.redhat.com/solutions/21693</a></strong> 无法全部查看</p><p>提示如下</p><p>SUBSCRIBER EXCLUSIVE CONTENT</p><p>An active Red Hat subscription is required to participate.</p><p>如下图</p><p><img src="/img/redhat2.png"></p><p><img src="/img/redhat.png"></p><h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><p>redhat开发者账号是需要订阅的，每次订阅为一年，到期后，文章就无法完整查看了。</p><h1 id="如何续订？"><a href="#如何续订？" class="headerlink" title="如何续订？"></a>如何续订？</h1><p>授权过期时，点击 <a href="https://developers.redhat.com/">此处</a> 右上角 登录并同意协议即可续订。</p><p>半个小时后差不多就可以打开了，或者明天再看看。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Redhat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux系统python3使用libreoffice将word转换为pdf文件</title>
    <link href="/posts/27017.html"/>
    <url>/posts/27017.html</url>
    
    <content type="html"><![CDATA[<h3 id="1、安装包"><a href="#1、安装包" class="headerlink" title="1、安装包"></a>1、安装包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install libreoffice -y<br></code></pre></td></tr></table></figure><h3 id="2、命令转换word-to-pdf"><a href="#2、命令转换word-to-pdf" class="headerlink" title="2、命令转换word to pdf"></a>2、命令转换word to pdf</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@VM-80-27-centos ~]# libreoffice --headless --convert-to pdf /data/demo.docx --outdir /data/a/  <br>convert /data/demo.docx -&gt; /data/a//demo.pdf using filter : writer_pdf_Export<br></code></pre></td></tr></table></figure><ul><li>格式：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">libreoffice --headless --convert-to pdf docx文件路径  --outdir 输出的文件路径<br></code></pre></td></tr></table></figure><h3 id="3、python脚本讲word转换为pdf（Linux系统）"><a href="#3、python脚本讲word转换为pdf（Linux系统）" class="headerlink" title="3、python脚本讲word转换为pdf（Linux系统）"></a>3、python脚本讲word转换为pdf（Linux系统）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">linux system word to pdf</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">import</span> subprocess<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">doc2pdf_linux</span>(<span class="hljs-params">docPath, pdfPath</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    convert a doc/docx document to pdf format (linux only, requires libreoffice)</span><br><span class="hljs-string">    :param doc: path to document</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 转换word to pdf主要命令</span><br>    cmd = <span class="hljs-string">&#x27;libreoffice --headless --convert-to pdf&#x27;</span>.split() + [docPath] + [<span class="hljs-string">&#x27;--outdir&#x27;</span>] + [pdfPath]<br>    <span class="hljs-comment"># 开启一个进程执行这个转换命令</span><br>    p = subprocess.Popen(cmd, stderr=subprocess.PIPE, stdout=subprocess.PIPE)<br>    <span class="hljs-comment"># 设置30秒超时</span><br>    p.wait(timeout=<span class="hljs-number">30</span>)<br>    <span class="hljs-comment"># 将该命令的标准输出和错误输出赋值给两个变量名称</span><br>    stdout, stderr = p.communicate()<br>    <span class="hljs-comment"># 如果错误输出存在，则抛出异常</span><br>    <span class="hljs-keyword">if</span> stderr:<br>        <span class="hljs-keyword">raise</span> subprocess.SubprocessError(stderr)<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    wordpath=<span class="hljs-string">&#x27;/data/demo.docx&#x27;</span><br>    pdfpath=<span class="hljs-string">&#x27;/data/test/&#x27;</span><br>    doc2pdf_linux(wordpath,pdfpath)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux系统nslookup域名解析正常但是ping不通</title>
    <link href="/posts/40346.html"/>
    <url>/posts/40346.html</url>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>nslookup 解析baidu域名可以正常解析，但是ping baidu.com 失败</p><p>报错如下</p><p><img src="https://xx-1253778947.cos.ap-beijing.myqcloud.com/607ece5a5bafa9dd77a9c7f99120e90d.jpeg" alt="报错截图"></p><h1 id="排查过程"><a href="#排查过程" class="headerlink" title="排查过程"></a>排查过程</h1><p>1、使用strace命令追踪查看系统调用过程，发现open &#x2F;etc目录下的大量文件报错权限不足</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@VM-80-27-centos ~]# strace -o /tmp/pingstrace.txt -tttT -s 1000 ping baidu.com<br>ping: baidu.com: 域名解析暂时失败<br>[root@VM-80-27-centos ~]# <br>[root@VM-80-27-centos ~]# grep open /tmp/pingstrace.txt <br>1659803039.797457 open(&quot;/etc/ld.so.preload&quot;, O_RDONLY|O_CLOEXEC) = 3 &lt;0.000010&gt;<br>1659803039.797816 open(&quot;/lib64/libonion.so&quot;, O_RDONLY|O_CLOEXEC) = 3 &lt;0.000023&gt;<br>1659803039.798298 open(&quot;/etc/ld.so.cache&quot;, O_RDONLY|O_CLOEXEC) = 3 &lt;0.000020&gt;<br>1659803039.798506 open(&quot;/lib64/libcap.so.2&quot;, O_RDONLY|O_CLOEXEC) = 3 &lt;0.000021&gt;<br>1659803039.798907 open(&quot;/lib64/libidn.so.11&quot;, O_RDONLY|O_CLOEXEC) = 3 &lt;0.000022&gt;<br>1659803039.799334 open(&quot;/lib64/libcrypto.so.10&quot;, O_RDONLY|O_CLOEXEC) = 3 &lt;0.000022&gt;<br>1659803039.799789 open(&quot;/lib64/libresolv.so.2&quot;, O_RDONLY|O_CLOEXEC) = 3 &lt;0.000023&gt;<br>1659803039.800226 open(&quot;/lib64/libm.so.6&quot;, O_RDONLY|O_CLOEXEC) = 3 &lt;0.000022&gt;<br>1659803039.800664 open(&quot;/lib64/libc.so.6&quot;, O_RDONLY|O_CLOEXEC) = 3 &lt;0.000021&gt;<br>1659803039.801120 open(&quot;/lib64/libdl.so.2&quot;, O_RDONLY|O_CLOEXEC) = 3 &lt;0.000021&gt;<br>1659803039.801494 open(&quot;/lib64/libattr.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3 &lt;0.000021&gt;<br>1659803039.801959 open(&quot;/lib64/libz.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3 &lt;0.000021&gt;<br>1659803039.804175 open(&quot;/etc/pki/tls/legacy-settings&quot;, O_RDONLY) = -1 ENOENT (没有那个文件或目录) &lt;0.000021&gt;<br>1659803039.804847 open(&quot;/usr/lib/locale/locale-archive&quot;, O_RDONLY|O_CLOEXEC) = 3 &lt;0.000022&gt;<br>1659803039.805883 open(&quot;/etc/nsswitch.conf&quot;, O_RDONLY|O_CLOEXEC) = -1 EACCES (权限不够) &lt;0.000019&gt;<br>1659803039.806002 open(&quot;/etc/host.conf&quot;, O_RDONLY|O_CLOEXEC) = -1 EACCES (权限不够) &lt;0.000020&gt;<br>1659803039.806054 open(&quot;/etc/resolv.conf&quot;, O_RDONLY|O_CLOEXEC) = -1 EACCES (权限不够) &lt;0.000019&gt;<br>1659803039.806169 open(&quot;/etc/ld.so.cache&quot;, O_RDONLY|O_CLOEXEC) = -1 EACCES (权限不够) &lt;0.000019&gt;<br>1659803039.806221 open(&quot;/lib64/tls/x86_64/libnss_dns.so.2&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (没有那个文件或目录) &lt;0.000021&gt;<br>1659803039.806324 open(&quot;/lib64/tls/libnss_dns.so.2&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (没有那个文件或目录) &lt;0.000020&gt;<br>1659803039.806429 open(&quot;/lib64/x86_64/libnss_dns.so.2&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (没有那个文件或目录) &lt;0.000020&gt;<br>1659803039.806536 open(&quot;/lib64/libnss_dns.so.2&quot;, O_RDONLY|O_CLOEXEC) = 4 &lt;0.000021&gt;<br>1659803039.807975 open(&quot;/lib64/tls/libnss_files.so.2&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (没有那个文件或目录) &lt;0.000023&gt;<br>1659803039.808038 open(&quot;/lib64/libnss_files.so.2&quot;, O_RDONLY|O_CLOEXEC) = 4 &lt;0.000023&gt;<br>1659803039.808654 open(&quot;/etc/hosts&quot;, O_RDONLY|O_CLOEXEC) = -1 EACCES (权限不够) &lt;0.000021&gt;<br>1659803039.808719 open(&quot;/usr/share/locale/locale.alias&quot;, O_RDONLY|O_CLOEXEC) = 4 &lt;0.000031&gt;<br>1659803039.809155 open(&quot;/usr/share/locale/zh_CN.UTF-8/LC_MESSAGES/libc.mo&quot;, O_RDONLY) = -1 ENOENT (没有那个文件或目录) &lt;0.000022&gt;<br>1659803039.809210 open(&quot;/usr/share/locale/zh_CN.utf8/LC_MESSAGES/libc.mo&quot;, O_RDONLY) = -1 ENOENT (没有那个文件或目录) &lt;0.000021&gt;<br>1659803039.809264 open(&quot;/usr/share/locale/zh_CN/LC_MESSAGES/libc.mo&quot;, O_RDONLY) = 4 &lt;0.000023&gt;<br>1659803039.809494 open(&quot;/usr/lib64/gconv/gconv-modules.cache&quot;, O_RDONLY) = 4 &lt;0.000023&gt;<br>[root@VM-80-27-centos ~]# <br></code></pre></td></tr></table></figure><p>2、检查提示权限不足的这些文件，权限和正常服务器是正常的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@VM-80-27-centos ~]# ll /etc/resolv.conf <br>-rw-r--r-- 1 root root 89 8月   5 23:38 /etc/resolv.conf<br>[root@VM-80-27-centos ~]# lsattr /etc/resolv.conf<br>-------------e-- /etc/resolv.conf<br>[root@VM-80-27-centos ~]# <br></code></pre></td></tr></table></figure><p>xxxxxxxxxx # -<em>- coding: utf-8 -</em>-“””linux system word to pdf”””import subprocessdef doc2pdf_linux(docPath, pdfPath):    “””    convert a doc&#x2F;docx document to pdf format (linux only, requires libreoffice)    :param doc: path to document    “””    # 转换word to pdf主要命令    cmd &#x3D; ‘libreoffice –headless –convert-to pdf’.split() + [docPath] + [‘–outdir’] + [pdfPath]    # 开启一个进程执行这个转换命令    p &#x3D; subprocess.Popen(cmd, stderr&#x3D;subprocess.PIPE, stdout&#x3D;subprocess.PIPE)    # 设置30秒超时    p.wait(timeout&#x3D;30)    # 将该命令的标准输出和错误输出赋值给两个变量名称    stdout, stderr &#x3D; p.communicate()    # 如果错误输出存在，则抛出异常    if stderr:        raise subprocess.SubprocessError(stderr)if <strong>name</strong> &#x3D;&#x3D; ‘<strong>main</strong>‘:    wordpath&#x3D;’&#x2F;data&#x2F;demo.docx’    pdfpath&#x3D;’&#x2F;data&#x2F;test&#x2F;‘    doc2pdf_linux(wordpath,pdfpath)python</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@VM-80-27-centos ~]# getenforce <br>Disabled<br></code></pre></td></tr></table></figure><p>4、检查这些文件上层目录&#x2F;etc，发现缺少可执行权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@VM-80-27-centos ~]# ls -ld /etc<br>drw-r--r--. 99 root root 12288 8月   5 19:16 /etc<br></code></pre></td></tr></table></figure><p>5、 手动添加可执行权限后恢复正常。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@VM-80-27-centos ~]# chmod 755 /etc<br>[root@VM-80-27-centos ~]# <br>[root@VM-80-27-centos ~]# ping baidu.com<br>PING baidu.com (110.242.68.66) 56(84) bytes of data.<br>64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=1 ttl=251 time=10.6 ms<br>64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=2 ttl=251 time=10.6 ms<br>64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=3 ttl=251 time=10.6 ms<br>^C<br>--- baidu.com ping statistics ---<br>3 packets transmitted, 3 received, 0% packet loss, time 2001ms<br>rtt min/avg/max/mdev = 10.605/10.614/10.625/0.008 ms<br>[root@VM-80-27-centos ~]# <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>strace</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos系统使用passwd命令修改密码报错 Authentication token manipulation error</title>
    <link href="/posts/24572.html"/>
    <url>/posts/24572.html</url>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>Centos系统使用passwd命令修改密码报错 Authentication token manipulation error</p><p><img src="/img/passwd.png" alt="报错截图"></p><h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><p>文件 &#x2F;etc&#x2F;pam.d&#x2F;system-auth （从system-auth-ac 软链接过来的）内容有所变动，</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>从正常机器拷贝一个同名文件过来做替换，问题恢复。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p> <a href="https://access.redhat.com/solutions/21693">https://access.redhat.com/solutions/21693</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ntpq命令报错 127.0.0.1：time out,nothing received</title>
    <link href="/posts/16825.html"/>
    <url>/posts/16825.html</url>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>ntpq命令报错 127.0.0.1：time out,nothing received</p><p><img src="/img/ntpq1.png" alt="报错截图"> </p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>检查iptables防火墙规则，将如下规则清除后可恢复正常。</p><p><img src="/img/ntpq2.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>ntp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux系统开启启动报错：/dev/vda1 contains a file system with errors, check forced.</title>
    <link href="/posts/33758.html"/>
    <url>/posts/33758.html</url>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>使用云服务器，远程无法登录，通过控制台vnc登录后看到这样的报错，如下：</p><p>Checking filesystems</p><p>&#x2F;dev&#x2F;vda1 contains a file system with errors, check forced.</p><p>&#x2F;dev&#x2F;vda1: Inodes that were part of a corrupted orphan linked list found.</p><p>&#x2F;dev&#x2F;vda1: UNEXPECTED INCONSISTENCY: RUN fsck MANUALLY. </p><p>(i.e., without -a or -p options)  FAILED</p><p><img src="/img/byriareeso.png" alt="报错截图"></p><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>一般是强制关机或服务器突然断电所致。</p><h2 id="处理方案"><a href="#处理方案" class="headerlink" title="处理方案"></a>处理方案</h2><h4 id="1、做备份"><a href="#1、做备份" class="headerlink" title="1、做备份"></a>1、做备份</h4><p>首先要<a href="https://cloud.tencent.com/document/product/362/5755?from=10680">创建快照</a>备份当前服务器状态，这样若修复过程中遇到问题或修复未果，我们则可以通过回滚快照恢复服务器到当前的状态。</p><h4 id="2、登录服务器"><a href="#2、登录服务器" class="headerlink" title="2、登录服务器"></a>2、登录服务器</h4><p>当前服务器为故障状态，无法远程登录， 需要登录<a href="https://console.cloud.tencent.com/cvm/instance/index?rid=1">腾讯云控制台</a>，然后使用<a href="https://cloud.tencent.com/document/product/213/35701?from=10680">VNC登录</a>服务器。</p><h4 id="3、根据提示输入root密码"><a href="#3、根据提示输入root密码" class="headerlink" title="3、根据提示输入root密码"></a>3、根据提示输入root密码</h4><p><img src="/img/fjkmayksqx.png"></p><h4 id="4、卸载文件系统"><a href="#4、卸载文件系统" class="headerlink" title="4、卸载文件系统"></a>4、卸载文件系统</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">umount /dev/vda1<br></code></pre></td></tr></table></figure><h4 id="5、使用fsck命令进行修复"><a href="#5、使用fsck命令进行修复" class="headerlink" title="5、使用fsck命令进行修复"></a>5、使用fsck命令进行修复</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">fsck.ext3  -p /dev/vda1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 这里的ext3要根据自身文件系统类型选择，可通过 df -Th 命令查看。</span></span><br></code></pre></td></tr></table></figure><p>若上面的命令修复无果，可使用下面的命令尝试修复。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">fsck.ext3 -y /dev/vda1<br></code></pre></td></tr></table></figure><p><strong>提示完成后，reboot重启服务器即可正常启动。</strong></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL和sql语句学习记录</title>
    <link href="/posts/33144.html"/>
    <url>/posts/33144.html</url>
    
    <content type="html"><![CDATA[<h2 id="数据库基本操作命令"><a href="#数据库基本操作命令" class="headerlink" title="数据库基本操作命令"></a>数据库基本操作命令</h2><pre><code class="hljs">#查看所有数据库；show databases;#查看当前使用的数据库；select database();#创建数据库：create database 数据库名 charset=utf8；#使用数据库：use 数据库名；#删除数据库：drop database 数据库名；</code></pre><h2 id="查看表："><a href="#查看表：" class="headerlink" title="查看表："></a>查看表：</h2><pre><code class="hljs">#查看当前数据库中的所有表：格式：show tables;# 查看创建表的命令：格式：show create table 表名；# 查看表结构： 格式：desc 表名；</code></pre><h2 id="创建表："><a href="#创建表：" class="headerlink" title="创建表："></a>创建表：</h2><pre><code class="hljs">#格式：create table 表名 (    字段1 类型 [约束],    字段2 类型 [约束]);#举例1：create table mytable(    id int unsigned primary key auto_increment not null,    name varchar(20));#举例2：create table student(    id int unsigned primary key auto_increment not null,    name varchar(20) not null,    age int unsigned default 0,    high decimal(5,2),    gender enum(&#39;男&#39;,&#39;女&#39;),    cls_id int unsigned);</code></pre><h2 id="修改表："><a href="#修改表：" class="headerlink" title="修改表："></a>修改表：</h2><pre><code class="hljs">#添加字段：alter table 表名 add 列名 类型；举例：alter table  student add addr varchar(30);#重命名字段：alter table 表名 change 原名 新名 类型及约束；举例：alter table student change addr dizhi varchar(30);#修改字段类型：alter table 表名 modify 列名 类型及约束；举例：alter table student modify addr char(100);#删除字段；alter table 表名 drop 列名；举例：alter table student drop addr;#删除表：alter table 表名</code></pre><p>添加数据：</p><pre><code class="hljs">#全列插入，值的顺序与表结构字段的顺序完全一一对应insert into 表名 values(...);举例：insert into student values(0,&#39;张三&#39;,12,143.11,&#39;男&#39;,12222222);# 这里的0表示占位，主键自增长#部分列插入，值的顺序与给出的列顺序对应insert into    表名 (列1，列2...) values(值1，值2...);举例：insert into student(name,age) values(&#39;小红&#39;,18);#一次性插入多行数据insert into 表名 values(...),(...)...;举例：insert into student values(0,&#39;李四&#39;,16,115,&#39;男&#39;,133333),(0,&#39;小花&#39;,19,160,&#39;女&#39;,100000);#部分列多行插入；insert into 表名(列1...) values(值1...)(值1...)...;举例：insert into student(name,age) values(&#39;小小1&#39;,16),(&#39;小小2&#39;,18);</code></pre><h2 id="修改查询数据："><a href="#修改查询数据：" class="headerlink" title="修改查询数据："></a>修改查询数据：</h2><pre><code class="hljs">#查看所有列数据select * from 表名；#查看指定列数据select 列1，列2...   from 表名；举例：select name,gender from student;#指定条件查询select * from 表名 条件；举例：select * from student where id=3;</code></pre><p>​<br>    #使用as为列火表指定别名<br>    select 列1 as 别名1，列2 as 别名2 from 表名；</p><pre><code class="hljs">举例：select name as &#39;名字&#39;,gender as &#39;性别&#39; from student;#调换字段的顺序select age as &#39;年龄&#39;,name as &#39;名字&#39;  from student;</code></pre><p>​<br>    #修改数据：<br>    update 表名 set 列1&#x3D;值1,列2&#x3D;值2   where 条件；</p><pre><code class="hljs">#全部修改update student set gender=&#39;男&#39;;#指定条件修改update student set gender=&#39;男&#39; where id=1,3;</code></pre><h3 id="as-语法"><a href="#as-语法" class="headerlink" title="as 语法"></a>as 语法</h3><pre><code class="hljs">as 可以为字段起别名as 也可以给表起别名，用来区分有相同字段的不同表语法：select 表别名.字段名 from 表名 as 表别名；举例：select aaa.name  from student as aaa;去重查询select distinct #语法：select distinct 字段名称 from 表名 ;#举例select distinct age from student ;</code></pre><h3 id="where-比较运算查询"><a href="#where-比较运算查询" class="headerlink" title="where 比较运算查询"></a>where 比较运算查询</h3><p>​    使用 where 字句对表中的数据进行筛选，结果为true会出现在结果集中；</p><pre><code class="hljs">常见的比较运算符:    等于 =    大于 &gt;    大于等于 &gt;=      小于 &lt;    小于等于 &lt;=    不等于 != 或 &lt;&gt;举例：1、查询年龄大于18岁的信息；select * from student where age &gt;18;2、查询小于等于16岁的信息select * from student where age &lt;= 16;3、查询不等于18岁的信息select * from student where age != 18;select * from student where age &lt;&gt; 18;</code></pre><h3 id="where逻辑运算符"><a href="#where逻辑运算符" class="headerlink" title="where逻辑运算符"></a>where逻辑运算符</h3><pre><code class="hljs">and 表示有多个条件时，多个条件必须同时成立or  表示有多个条件时，满足任意一个条件即成立not 表示取反操作举例：1、查询15-18岁之间的信息select * from student where age &gt; 15 and  age &lt; 18;2、查询大于15岁的女性select * from student where gender=&#39;女&#39; and age &gt; 15;3、查询不在18岁以上的信息select * from student where not  (age &gt;= 18);注意：使用() 运算符优先级问题</code></pre><h3 id="where模糊查询"><a href="#where模糊查询" class="headerlink" title="where模糊查询"></a>where模糊查询</h3><pre><code class="hljs">关键字likelike后跟：    % 表示任意多个任意字符    _ 表示一个任意字符</code></pre><p>​<br>    举例：<br>    1、查询姓名中已 小 字开头的信息<br>    select * from student where name like ‘小%’;<br>    2、查询名字有2个字的名称<br>    select * from student where name like ‘__’;<br>    3、查询姓名中包含 小 字的名字；<br>    select * from student where name like ‘%小%’;</p><h3 id="where范围查询"><a href="#where范围查询" class="headerlink" title="where范围查询"></a>where范围查询</h3><pre><code class="hljs">知道between-and 和 in 的区别连续范围查询和 非连续范围查询in：表示在一个非连续的范围内between a and b 表示在一个连续范围内（包含a和b）</code></pre><p>​<br>    举例：<br>    1、查询年龄在15-18范围内的信息<br>    select * from student where age between 15 and 18;<br>    2、查询年龄不在15-18范围内的信息<br>    select * from student where age not between 15 and 18;<br>    3、查询年龄在 (12,13,37) 范围内的信息<br>    select * from student where age in (12,13,37);<br>    4、查询年龄不在 (12,13,37) 范围内的信息<br>    select * from student where age not in (12,13,37);</p><h3 id="where空值判断"><a href="#where空值判断" class="headerlink" title="where空值判断"></a>where空值判断</h3><pre><code class="hljs">判断为空：is null判断非空：is not null举例：1、查询为空的信息select * from student where cls_id is null;2、查询不为空的信息select * from student where cls_id is not null;</code></pre><h3 id="order排序查询"><a href="#order排序查询" class="headerlink" title="order排序查询"></a>order排序查询</h3><p>​    关键字 order by</p><pre><code class="hljs">语法：select * from 表名 order by 列1 [asc|desc] [,列2 asc|desc,...]注意：将行数据按照列1进行排序，如果某些行列1的值相同，则按照列2 排序，以此类推asc从小到大，升序，默认desc从大到小，降序举例：1、按年龄升序查询select * from student order by age;2、安年龄降序查询select * from student order by age desc;3、查询年龄大于15 的女性，按年龄降序select * from student where (age &gt; 15 and gender=&#39;女&#39;) order by age desc;</code></pre><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><p>​    作用：会把当前表当做一个组进行统计</p><pre><code class="hljs">特点：每个组函数接受一个参数，一般为字段名或者表达式；统计结果中默认忽略字段为null 的记录不允许出现嵌套，比如sum(max(xx))count(字段)    ：计算总数max(字段)    ：求最大值min(字段)    ：求最小值sum(字段)    ：求字段之和avg(字段)    ：求此字段平均值</code></pre><p>​<br>    举例：<br>    1、查看男性总数<br>    select count(*) from student where gender&#x3D;1;</p><pre><code class="hljs">2、查看最大的年龄数select max(age) from student;3、平均年龄select avg(age) from student;# 四舍五入，保留几位小数语法：round(字段,保留位数)select round(avg(age),1) from student;举例：四舍五入展示身高这一列select name,round(high,1) from student ;</code></pre><h3 id="group分组查询"><a href="#group分组查询" class="headerlink" title="group分组查询"></a>group分组查询</h3><pre><code class="hljs">所谓的分组就是将一个数据集  划分成若干个小区域，然后针对这个若干个 小区域 进行数据处理使用特点    group by 将查询结果按照1个 或多个字段进行分组 ，字段值相同的为一组    group by 可用于单个字段分组，也可用于多个字段分组举例：按性别分组，统计每个性别有多少人select gender,count(*) from student group by gender;group by + group_concat()作用：根据分组结果，使用grou_concat来放置每一个分组中某字段的集合举例：按性别分区，将每个性别里面的人名列出select gender,group_concat(name) from student group by gender;select gender as 性别,group_concat(name) as 人员列表 from student group by gender;group by + 聚合函数作用：聚合函数在和group by 结合使用的时候 统计的对象是每个分组举例：查看每个性别中年龄最大的是多大select gender,max(age) from student group by gender;group by + having 作用：对每个分组中的数据进行处理和where类似，但是having只能用于grou by对分组后的每组数据进行过滤，而where是用来过滤表数据例如：查询每个性别中年龄超过10岁的性别以及姓名select group_concat(name),gender from student group by gender having avg(age) &gt; 10;group by + with rollup作用：在数据表的字后新增一行，来记录当前表中该字段对应的操作结果，一般是汇总结果举例：统计每个年龄的数量，最后一行汇总select gender,count(*) from student group by gender with rollup;</code></pre><p>limit限制擦和讯<br>    可以使用limit 限制取出记录的数量，但limit要卸载sql语句的最后</p><pre><code class="hljs">语法：limit 起始记录，记录数起始记录是指从第几条开始取，第一条记录的下标是0记录数是指从起始记录开始向后依次取得记录数分页查询技巧：起始记录=（当前页数-1）x 每页个数</code></pre><h2 id="连接查询："><a href="#连接查询：" class="headerlink" title="连接查询："></a>连接查询：</h2><h3 id="内连接："><a href="#内连接：" class="headerlink" title="内连接："></a>内连接：</h3><pre><code class="hljs">查询的结果为两个表符合条件的匹配到的数据    注意：    1、根据连接条件取出两个表的交集    2、on 是连接条件，where是连接后筛选条件    语法：    select 字段 from 表1 inner join 表2 on 表1.字段1=表2.字段2    举例：    1、查询每个学员对应的班级信息    select * from student inner join class on student.cls_id=class.id;    2、查询每个学员对应的班级信息，且仅显示姓名和班级信息；    select student.name,class.name from student inner join class on student.cls_id=class.id;</code></pre><p>​<br>​    </p><h3 id="外连接："><a href="#外连接：" class="headerlink" title="外连接："></a>外连接：</h3><p> 左连接：<br> 主表 left join 从表 on 连接条件<br> 左外连接查询：查询的结果为两个表匹配到的数据和左表特有的数据<br> 右连接：<br> 从表 right join 主表 on 连接条件<br> 右外连接查询：查询的结果为两个表匹配到的数据和右表特有的数据</p><h3 id="自连接："><a href="#自连接：" class="headerlink" title="自连接："></a>自连接：</h3><p> 使用自连接查询只需要一个表就可以，可以加快查询速度，减少数据表占用空间<br> 自连接查询本质还是连接查询</p><h3 id="子查询："><a href="#子查询：" class="headerlink" title="子查询："></a>子查询：</h3><pre><code class="hljs">把一个查询的结果当做另一个查询的条件三类：    标量子查询：子查询返回的结果是一个数据（一行一列）    列子查询：返回的结果是一例（一列多行）    行子查询：返回的结果是一行（一行多列）</code></pre><p>​<br>    举例：<br>    1、查询平均身高<br>    select avg(age) from student;<br>    2、查询大于平均身高的信息<br>    select * from  student where age &gt; (select avg(age) from student);</p>]]></content>
    
    
    
    <tags>
      
      <tag>MySQL，SQL,database</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何检测处理器是否支持AES-NI指令集？</title>
    <link href="/posts/11442.html"/>
    <url>/posts/11442.html</url>
    
    <content type="html"><![CDATA[<h2 id="什么是AES-NI？"><a href="#什么是AES-NI？" class="headerlink" title="什么是AES-NI？"></a>什么是AES-NI？</h2><p>高级加密标准指令集（或称英特尔高级加密标准新指令，简称AES-NI）是一个x86指令集架构的扩展，用于Intel和AMD微处理器，由Intel在2008年3月提出。该指令集的目的是改进应用程序使用高级加密标准（AES）执行加密和解密的速度。</p><p>详细介绍可参考<a href="https://zh.wikipedia.org/wiki/AES%25E6%258C%2587%25E4%25BB%25A4%25E9%259B%2586">链接</a></p><h2 id="Windows系统"><a href="#Windows系统" class="headerlink" title="Windows系统"></a>Windows系统</h2><p>Windows服务器借助第三方工具，我这里使用的是 CPU-Z，<a href="http://www.cpuid.com/cpuz.php">点击下载</a></p><p>此处下载、安装步骤省略，直接查看结果，如图：</p><p><img src="/img/slwy6m64xw.png"></p><h2 id="Linux系统"><a href="#Linux系统" class="headerlink" title="Linux系统"></a>Linux系统</h2><p>使用命令【grep aes &#x2F;proc&#x2F;cpuinfo】即可查看，当此命令能返回内容，说明此服务器的处理器是支持AES-NI的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@VM-80-27-centos ~]# grep aes /proc/cpuinfo<br>flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl eagerfpu pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single fsgsbase bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 arat avx512_vnni<br>flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl eagerfpu pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single fsgsbase bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 arat avx512_vnni<br>[root@VM-80-27-centos ~]# <br></code></pre></td></tr></table></figure><h2 id="Mac系统"><a href="#Mac系统" class="headerlink" title="Mac系统"></a>Mac系统</h2><p>使用命令【sysctl -n machdep.cpu | grep -i aes】即可查看，当此命令能返回内容，说明此服务器的处理器是支持AES-NI的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">xxx-MB0:~ x$ sysctl -n machdep.cpu | grep -i aes<br>FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 PCLMULQDQ DTES64 MON DSCPL VMX SMX EST TM2 SSSE3 FMA CX16 TPR PDCM SSE4.1 SSE4.2 x2APIC MOVBE POPCNT AES PCID XSAVE OSXSAVE SEGLIM64 TSCTMR AVX1.0 RDRAND F16C<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Mac</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/posts/16107.html"/>
    <url>/posts/16107.html</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>df 和 du 命令显示不一致？</title>
    <link href="/posts/2312.html"/>
    <url>/posts/2312.html</url>
    
    <content type="html"><![CDATA[<h2 id="常见原因"><a href="#常见原因" class="headerlink" title="常见原因"></a>常见原因</h2><h4 id="1、有程序打开了文件，此文件被删除，但是程序没关闭，此文件所占用空间未释放。通过lsof命令可确认此情况"><a href="#1、有程序打开了文件，此文件被删除，但是程序没关闭，此文件所占用空间未释放。通过lsof命令可确认此情况" class="headerlink" title="1、有程序打开了文件，此文件被删除，但是程序没关闭，此文件所占用空间未释放。通过lsof命令可确认此情况"></a>1、有程序打开了文件，此文件被删除，但是程序没关闭，此文件所占用空间未释放。通过lsof命令可确认此情况</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">lsof  | grep -i delete<br></code></pre></td></tr></table></figure><h4 id="2、挂载点下有子目录被再次挂在到别处，这种情况下会隐藏原目录内容。"><a href="#2、挂载点下有子目录被再次挂在到别处，这种情况下会隐藏原目录内容。" class="headerlink" title="2、挂载点下有子目录被再次挂在到别处，这种情况下会隐藏原目录内容。"></a>2、挂载点下有子目录被再次挂在到别处，这种情况下会隐藏原目录内容。</h4><ul><li>什么是有嵌套挂载？</li></ul><p>系统盘目录是挂在到根目录&#x2F;的，但是数据盘是挂在到根目录下的&#x2F;data目录，这时就是嵌套挂载。</p><ul><li>举例说明</li></ul><p>例如&#x2F;data目录原来有5G数据，但是此时将 数据盘vdb挂在到&#x2F;data目录，此时du统计不到原&#x2F;data目录的5G数据。</p><p>这时我们想要在不卸载数据盘的情况下确认根目录下的data目录原本是否有数据，则需要bind挂载它的上层目录&#x2F;：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /new; mount -o bind / /new ; du -sh /new ; umount /new<br></code></pre></td></tr></table></figure><h4 id="3、对于共享文件系统，可能会被其他服务器挂载了，请检查另外的服务器是否存在以上1和2-的场景"><a href="#3、对于共享文件系统，可能会被其他服务器挂载了，请检查另外的服务器是否存在以上1和2-的场景" class="headerlink" title="3、对于共享文件系统，可能会被其他服务器挂载了，请检查另外的服务器是否存在以上1和2 的场景"></a>3、对于共享文件系统，可能会被其他服务器挂载了，请检查另外的服务器是否存在以上1和2 的场景</h4><h4 id="4、xfs文件系统异常"><a href="#4、xfs文件系统异常" class="headerlink" title="4、xfs文件系统异常"></a>4、xfs文件系统异常</h4><p>如果是xfs文件系统，已排除上诉3种情况，重启机器后，空间还未释放，可以检测下&#x2F;var&#x2F;log&#x2F;messages日志文件是否有文件系统相关报错，在确保数据已备份的情况下，使用 xfs_repair 命令修复。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>du</tag>
      
      <tag>sh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>磁盘扩容报错</title>
    <link href="/posts/35857.html"/>
    <url>/posts/35857.html</url>
    
    <content type="html"><![CDATA[<h2 id="报错信息："><a href="#报错信息：" class="headerlink" title="报错信息："></a>报错信息：</h2><h2 id="resize2fs-New-size-too-large-to-be-expressed-in-32-bits"><a href="#resize2fs-New-size-too-large-to-be-expressed-in-32-bits" class="headerlink" title="resize2fs: New size too large to be expressed in 32 bits"></a>resize2fs: New size too large to be expressed in 32 bits</h2><h2 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因:"></a>报错原因:</h2><p>普通ext4文件系统，无法处理大于16TB的分区</p><h2 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h2><p>下载编译e2fsprogs-1.43以后的版本（通常下载最新稳定版本), 之后用该版本的resize2fs 加上-b选项扩容<br>下载最新版本的稳定tag</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://git.kernel.org/pub/scm/fs/ext2/e2fsprogs.git/snapshot/e2fsprogs-1.45.6.tar.gz<br>tar xf e2fsprogs-1.45.6.tar.gz <br>cd e2fsprogs-1.45.6/<br>./configure --prefix=/usr/local/e2fsprogs<br>make<br>make install<br>cd /usr/local/e2fsprogs/sbin/<br></code></pre></td></tr></table></figure><h3 id="注意修改参数"><a href="#注意修改参数" class="headerlink" title="注意修改参数"></a>注意修改参数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">./e2fsck /dev/xxxx<br>./resize2fs -b /dev/xxxx<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo使用文档</title>
    <link href="/posts/41527.html"/>
    <url>/posts/41527.html</url>
    
    <content type="html"><![CDATA[<h3 id="添加文章"><a href="#添加文章" class="headerlink" title="添加文章"></a>添加文章</h3><h4 id="1、在本地博客根目录鼠标右击点击【Git-bash-here】"><a href="#1、在本地博客根目录鼠标右击点击【Git-bash-here】" class="headerlink" title="1、在本地博客根目录鼠标右击点击【Git bash here】"></a>1、在本地博客根目录鼠标右击点击【Git bash here】</h4><h4 id="2、新建一篇文档"><a href="#2、新建一篇文档" class="headerlink" title="2、新建一篇文档"></a>2、新建一篇文档</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new 文章名称<br></code></pre></td></tr></table></figure><h4 id="3、编辑文章"><a href="#3、编辑文章" class="headerlink" title="3、编辑文章"></a>3、编辑文章</h4><h4 id="4、发布"><a href="#4、发布" class="headerlink" title="4、发布"></a>4、发布</h4><p>hexo三连</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><h4 id="5、不出意外一会就可以访问到新文章了"><a href="#5、不出意外一会就可以访问到新文章了" class="headerlink" title="5、不出意外一会就可以访问到新文章了"></a>5、不出意外一会就可以访问到新文章了</h4>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu系统网卡异常</title>
    <link href="/posts/37529.html"/>
    <url>/posts/37529.html</url>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu系统网卡异常"><a href="#Ubuntu系统网卡异常" class="headerlink" title="Ubuntu系统网卡异常"></a>Ubuntu系统网卡异常</h1><h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p>ifconfig 查看没有获取到IP。</p><p>启动网络服务报错此服务找不到</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">abuntu@VM-32-2-ubuntu:sudo service network restart<br>Eailed to restart network.service:Unit network.service not found<br></code></pre></td></tr></table></figure><h2 id="排查过程"><a href="#排查过程" class="headerlink" title="排查过程"></a>排查过程</h2><p>1、执行dhclient命令获取到了IP了，网络也通了，以为问题解决了</p><p>但是重启机器后依然是获取不到IP的状态；</p><p>2、网上看了下Ubuntu 20是 <strong>netplan</strong> 工具管理的网络，在机器上面执行了下，发现没有这个命令；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bash: netplan:command not found<br></code></pre></td></tr></table></figure><p>3、执行如下命令安装一下这个命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install netplan.io<br></code></pre></td></tr></table></figure><p>4、设置 systemd-networkd 服务开机自启。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo systemctl enable systemd-networkd.service<br></code></pre></td></tr></table></figure><p>5、重启服务器网络正常启动。</p>]]></content>
    
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
